url <- "https://github.com/apaulag24/Metodos/blob/10dd75436189f09895e934ae05ce937a0baf390a/Gallstone.csv"
library(ggplot2)
library(readr)
url <- "https://raw.githubusercontent.com/apaulag24/Metodos/refs/heads/main/Gallstone.csv"
datos <- read.csv(url, sep = ",", stringsAsFactors = TRUE)
head(datos,n=5)
head(datos,n=5)
dim(datos)
head(datos,n=5)
dim(datos)
colnames(datos)
head(datos,n=5)
dim(datos)
colnames(datos) #galstone status no es una variable
str(datos)
install.packages("corrplot")
install.packages("psych")  # útil para análisis exploratorio
install.packages("corrplot")
install.packages("psych")
library(corrplot)
library(psych)
# Elimina columnas no numéricas si existen
datos_num <- gallstone[sapply(gallstone, is.numeric)]
datos_num <- datos[sapply(datos, is.numeric)]
# Elimina columnas con NA si quieres evitar errores
datos_num <- na.omit(datos_num)
cor_matrix <- cor(datos_num)
corrplot(cor_matrix, method = "color", type = "upper", tl.cex = 0.8, number.cex = 0.7, order = "hclust")
## Análisis de correlación de variables numéricas
```{r correlacion, warning=FALSE, message=FALSE}
# Cargar librerías necesarias
library(psych)
library(corrplot)
# Seleccionar solo las variables numéricas
datos_num <- datos[sapply(datos, is.numeric)]
# Quitar filas con NA para evitar errores en correlaciones
datos_num <- na.omit(datos_num)
# Crear un subconjunto con variables que sospechamos que se pueden correlacionar
subconjunto <- datos_num[, c("BMI", "fat_mass", "weight", "muscle_mass",
"total_body_water", "protein")]
library(psych)
library(corrplot)
# Variables numéricas
datos_num <- datos[sapply(datos, is.numeric)]
datos_num <- na.omit(datos_num)
# Subconjunto con nombres corregidos según tu dataset
subconjunto <- datos_num[, c("Body.Mass.Index..BMI.",
"Total.Body.Fat.Ratio..TBFR.....",
"Weight",
"Muscle.Mass..MM.",
"Total.Body.Water..TBW.",
"Body.Protein.Content..Protein.....")]
# Visualización con pairs.panels
pairs.panels(subconjunto,
method = "pearson",
hist.col = "#00BFC4",
density = TRUE,
ellipses = TRUE)
# Mostrar correlaciones fuertes
cor_matrix <- cor(datos_num)
high_cor <- which(abs(cor_matrix) > 0.85 & abs(cor_matrix) < 1, arr.ind = TRUE)
cat("Pares de variables con correlación alta (r > 0.85):\n\n")
for (i in seq_len(nrow(high_cor))) {
var1 <- rownames(cor_matrix)[high_cor[i, 1]]
var2 <- colnames(cor_matrix)[high_cor[i, 2]]
r <- round(cor_matrix[var1, var2], 2)
cat(paste0("- ", var1, " vs ", var2, ": r = ", r, "\n"))
}
```{r pressure, echo=FALSE}
install.packages("tidyverse")
